@inject IViewLocalizer Localizer
@inject IClientThemingService<DefaultClientThemeConfig> ThemeService

@model LoginViewModel

@{
    LoginTempData loginTempData = TempData.Get<LoginTempData>(nameof(loginTempData));
    var x = await ThemeService.GetClientTheme();
}

<div class="login-page">
    <div class="lead">
        <h1>@Localizer["Login"]</h1>
        <p>@Localizer["Choose how to login"]</p>
    </div>
    <partial name="_ValidationSummary" />
    <div class="alert alert-danger" role="alert" indice-if="loginTempData?.Errors.Any() == true">
        <ul>
            @foreach (var error in loginTempData.Errors)
            {
                <li>@error</li>
            }
        </ul>
    </div>
    <div class="row">
        @if (Model.EnableLocalLogin)
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h2>@Localizer["Local Account"]</h2>
                    </div>
                    <div class="card-body">
                        <form asp-route="Login">
                            <input type="hidden" asp-for="ReturnUrl" />
                            <div class="form-group">
                                <label asp-for="UserName">@Localizer["Username"]</label>
                                <input class="form-control" placeholder="@Localizer["Username"]" asp-for="UserName" autofocus />
                            </div>
                            <div class="form-group">
                                <label asp-for="Password">@Localizer["Password"]</label>
                                <input type="password" class="form-control" placeholder="@Localizer["Password"]" asp-for="Password" autocomplete="off" />
                            </div>
                            @if (Model.AllowRememberLogin)
                            {
                                <div class="form-group">
                                    <div class="form-check">
                                        <input class="form-check-input" asp-for="RememberLogin" />
                                        <label class="form-check-label" asp-for="RememberLogin">@Localizer["Remember my login"]</label>
                                    </div>
                                </div>
                            }
                            <button class="btn btn-primary" name="button" value="login">@Localizer["Login"]</button>
                            <button class="btn btn-secondary" name="button" value="cancel">@Localizer["Cancel"]</button>
                        </form>
                    </div>
                </div>
            </div>
        }
        @if (Model.VisibleExternalProviders.Any())
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h2>@Localizer["External Account"]</h2>
                    </div>
                    <div class="card-body">
                        <ul class="list-inline">
                            @foreach (var provider in Model.VisibleExternalProviders)
                            {
                                <li class="list-inline-item mb-2">
                                    <a class="btn btn-secondary" asp-controller="@ExternalController.Name" asp-action="@nameof(ExternalController.Challenge)" asp-route-provider="@provider.AuthenticationScheme" asp-route-returnUrl="@(Model.ReturnUrl ?? Url.Action(nameof(GrantsController.Index), GrantsController.Name))">
                                        @Localizer[provider.DisplayName]
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
        @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
        {
            <div class="alert alert-warning">
                <strong>@Localizer["Invalid login request"]</strong>
                @Localizer["There are no login schemes configured for this request"].
            </div>
        }
    </div>
</div>